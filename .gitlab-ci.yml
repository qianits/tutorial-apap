default:
    tags:
        - apap


workflow:
    rules:
        - if: $CI_COMMIT_TAG
          when: never
        - if: $CI_COMMIT_BRANCH == 'feat/tutorial-7-bacabaca'


before_script:
    - docker info
    - javac -version


variables:
    IMAGE_OPENJDK_GRADLE: gradle:7.3.3-jdk17-alpine
    IMAGE_DOCKER_DIND: docker:20.10.16


stages:
    - build
    - test
    - build-image
    - publish-image
    - deploy


build:
    image: $IMAGE_OPENJDK_GRADLE
    stage: build
    script:
        - echo "Compiling the code..."
        - cd $CI_PROJECT_DIR/bacabaca
        - sh gradlew clean assemble
        - |
            echo "Creating .env file inside bacabaca folder..."
            echo "DATABASE_URL_DEV=$DATABASE_URL_DEV" >> .env
            echo "DATABASE_URL_PROD=$DATABASE_URL_PROD" >> .env
            echo "PROD_USERNAME=$PROD_USERNAME" >> .env
            echo "PROD_PASSWORD=$PROD_PASSWORD" >> .env
            echo "DEV_USERNAME=$DEV_USERNAME" >> .env
            echo "DEV_PASSWORD=$DEV_PASSWORD" >> .env
        - cat .env
    artifacts:
        paths:
            - bacabaca/build/libs/bacabaca-0.0.1-SNAPSHOT.jar
            - bacabaca/.env


build-image:
    stage: build-image
    script:
        - echo "Building Docker Image..."
        - docker build -t $REGISTRY_SERVER/qistina.muharrifa/apap-177-new:$CI_COMMIT_SHORT_SHA .
        - docker build -t $REGISTRY_SERVER/qistina.muharrifa/apap-177-new:latest .


publish-image:
    stage: publish-image
    script:
        - echo "Publishing Docker Image..."
        - echo $REGISTRY_SERVER
        - echo $REGISTRY_PASSWORD | docker login --username $REGISTRY_USERNAME --password-stdin $REGISTRY_SERVER
        - docker push $REGISTRY_SERVER/qistina.muharrifa/apap-177-new:$CI_COMMIT_SHORT_SHA
        - docker push $REGISTRY_SERVER/qistina.muharrifa/apap-177-new:latest


deploy:
    stage: deploy
    before_script:
        - export COMPOSE_HTTP_TIMEOUT=120
        - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
        - eval $(ssh-agent -s)
        - echo "$DEPLOY_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
        - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config


    script:
        - echo "Deploy to server..."
        - ssh "${DEPLOY_USERNAME}@${DEPLOY_SERVER}" "mkdir -p ~/apap-cicd-177/bacabaca/"
        - rsync -rahv $CI_PROJECT_DIR/bacabaca/.env "${DEPLOY_USERNAME}@${DEPLOY_SERVER}:~/apap-cicd-177/bacabaca/"
        - rsync -rahv $CI_PROJECT_DIR/docker-compose-deploy.yml "${DEPLOY_USERNAME}@${DEPLOY_SERVER}:~/apap-cicd-177/"
        - ssh "${DEPLOY_USERNAME}@${DEPLOY_SERVER}" "cd ~/apap-cicd-177/ && docker-compose -f docker-compose-deploy.yml down && docker-compose -f docker-compose-deploy.yml pull && docker-compose -f docker-compose-deploy.yml up -d"
        - ssh "${DEPLOY_USERNAME}@${DEPLOY_SERVER}" "docker exec apap-cicd-177_db_1 psql -U postgres -c \"CREATE DATABASE bacabaca;\""
